// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture0: { value: white }
        texture1: { value: white }
        texture2: { value: white }
        texture3: { value: white }
        
        texture4: { value: white }
        texture5: { value: white }
        texture6: { value: white }
        texture7: { value: white }
        
        alphaThreshold: { value: 0.5 }
}%


CCProgram vs %{
    precision highp float;

    #include <cc-global>
    #include <cc-local>

    in vec3 a_position;
    in vec4 a_color;
    out vec4 v_color;

    in vec2 a_uv0;
    out vec2 v_uv0;

    void main () {
        vec4 pos = vec4(a_position, 1);
        pos = cc_matViewProj * pos;

        v_uv0 = a_uv0;
        v_color = a_color;

        gl_Position = pos;
    }
}%


CCProgram fs %{
    precision highp float;
    
    #include <alpha-test>
    #include <cc-global>
    #include <cc-local>

    in vec4 v_color;
    in vec2 v_uv0;
    uniform sampler2D texture0;
    uniform sampler2D texture1;
    uniform sampler2D texture2;
    uniform sampler2D texture3;
    uniform sampler2D texture4;
    uniform sampler2D texture5;
    uniform sampler2D texture6;
    uniform sampler2D texture7;

    void main () {
        vec4 o = vec4(0.);
        if (v_color.r < 1. / 8.) {
            o = texture(texture0, v_uv0);
        } else if (v_color.r < 2. / 8.) {
            o = texture(texture1, v_uv0);
        } else if (v_color.r < 3. / 8.) {
            o = texture(texture2, v_uv0);
        } else if (v_color.r < 4. / 8.) {
            o = texture(texture3, v_uv0);
        } else if (v_color.r < 5. / 8.) {
            o = texture(texture4, v_uv0);
        } else if (v_color.r < 6. / 8.) {
            o = texture(texture5, v_uv0);
        } else if (v_color.r < 7. / 8.) {
            o = texture(texture6, v_uv0);
        } else if (v_color.r < 8. / 8.) {
            o = texture(texture7, v_uv0);
        }
        
        gl_FragColor = o;
    }
}%
