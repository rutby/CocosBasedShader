// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        rippleTexture: { value: white }
        alphaThreshold: { value: 0.5 }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  in vec2 a_uv0;
  
  out vec4 v_color;
  out vec2 v_uv0;

  void main () {
    vec4 pos = vec4(a_position, 1);
    pos = cc_matViewProj * pos;

    v_uv0 = a_uv0;
    v_color = a_color;
    gl_Position = pos;
  }
}%


CCProgram fs %{
    precision highp float;
    
    #include <alpha-test>
    #include <cc-global>
    #include <cc-local>
    
    #define PI 3.141592653

    in vec4 v_color;
    in vec2 v_uv0;
    uniform sampler2D texture;
    uniform sampler2D rippleTexture;
    
    float ripple(float emisive, vec2 pos, float radius) {
        float d = length(v_uv0.xy - pos);
        float s1 = step(d, radius * emisive);
        float s2 = step(radius * 0.9  * emisive, d);
        return step(2., s1 + s2);
    }

    void main () {
        vec4 o = vec4(1, 1, 1, 1.);
        
        vec4 ripple = texture(rippleTexture, v_uv0);
        float opacity = fract(ripple.a + cc_time.x);
        float range = opacity - 1.0 + ripple.x;
        float fadeout = 1. - opacity;
        float final = fadeout * sin(clamp(range * 12.0, 0.0, 4.0) * PI);
        o.rgb = vec3(final);
    
        gl_FragColor = o;
    }
}%
