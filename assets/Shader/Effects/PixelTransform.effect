// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        noiseTexture: { value: white }
        alphaThreshold: { value: 0.5 }
        outlineWidth: { value: 3.0 }
        textureSize: { value: [303, 380] }
        outlineColor: { value: [0.086, 0.407, 1, 1.] }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  in vec2 a_uv0;
  out vec2 v_uv0;

  void main () {
    vec4 pos = vec4(a_position, 1);
    pos = cc_matViewProj * pos;

    v_uv0 = a_uv0;
    v_color = a_color;
    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>
  #include <cc-global>
  #include <cc-local>

  in vec4 v_color;
  in vec2 v_uv0;
  uniform sampler2D texture;
  uniform sampler2D noiseTexture;
  
  uniform CUSTOM {
      vec4 outlineColor;
      vec2 textureSize;
      float outlineWidth;
  };

  void main () {
    vec4 o = texture(texture, v_uv0);
    
    float segment = 25.;
    float blend = fract(cc_time.x * 0.5) * 2.;
    float nx = floor(v_uv0.x * segment) / segment;
    float ny = floor(v_uv0.y * segment) / segment;
    float seq = smoothstep(blend - 0.5, blend, nx);
    
    vec4 col = texture(noiseTexture, vec2(nx, ny)); 
    o.a *= step(0.01, seq - col.r);

    gl_FragColor = o;
  }
}%
