// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        maskTexture: { value: white }
        alphaThreshold: { value: 0.5 }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  in vec2 a_uv0;
  out vec2 v_uv0;

  void main () {
    vec4 pos = vec4(a_position, 1);
    pos = cc_matViewProj * pos;

    v_uv0 = a_uv0;
    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>
  #include <cc-global>
  #include <cc-local>

  in vec4 v_color;
  in vec2 v_uv0;
  uniform sampler2D texture;
  uniform sampler2D maskTexture;

  void main () {
        vec4 outlineColor = vec4(0.086, 0.407, 1., 1.);
        vec4 o = texture(texture, v_uv0);
        vec4 mask = texture(maskTexture, v_uv0);
        
        // 外发光
        float threshold = 0.6;
        o += outlineColor * 0.3 / abs(mask.a - threshold) * step(mask.a, threshold) * step(0.01, mask.a);
        
        gl_FragColor = o;
  }
}%
