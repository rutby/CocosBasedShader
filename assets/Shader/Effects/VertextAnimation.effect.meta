{
  "ver": "1.0.25",
  "uuid": "64812db8-83d4-49fc-98b5-de1ee1bdd71c",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mediump mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\nvoid main () {\n      v_uv0 = a_uv0;\n      v_color = a_color;\n      vec4 pos = vec4(a_position, 1);\n      pos = cc_matViewProj * pos;\n      gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nvarying vec4 v_color;\nvarying vec2 v_uv0;\nuniform sampler2D texture;\nuniform sampler2D noiseTexture;\nvec4 kernel() {\n      float offset = 2. / 445.;\n      vec4 color = texture2D(texture,vec2(v_uv0.x - offset,v_uv0.y - offset)) * 0.0947416;\n      color += texture2D(texture,vec2(v_uv0.x, v_uv0.y - offset)) * 0.118318;\n      color += texture2D(texture,vec2(v_uv0.x + offset, v_uv0.y + offset)) * 0.0947416;\n      color += texture2D(texture,vec2(v_uv0.x - offset, v_uv0.y)) * 0.118318;\n      color += texture2D(texture,vec2(v_uv0.x, v_uv0.y)) * 0.147761;\n      color += texture2D(texture,vec2(v_uv0.x + offset, v_uv0.y)) * 0.118318;\n      color += texture2D(texture,vec2(v_uv0.x - offset, v_uv0.y + offset)) * 0.0947416;\n      color += texture2D(texture,vec2(v_uv0.x, v_uv0.y + offset)) * 0.118318;\n      color += texture2D(texture,vec2(v_uv0.x + offset, v_uv0.y - offset)) * 0.0947416;\n      return color;\n  }\nvoid main () {\n      vec4 o = kernel();\n      gl_FragColor = o;\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_nativeSize;\n  highp   mat4 cc_matView;\n  mediump mat4 cc_matViewInv;\n  mediump mat4 cc_matProj;\n  mediump mat4 cc_matProjInv;\n  mediump mat4 cc_matViewProj;\n  mediump mat4 cc_matViewProjInv;\n  mediump vec4 cc_cameraPos;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin vec2 a_uv0;\nout vec2 v_uv0;\nvoid main () {\n      v_uv0 = a_uv0;\n      v_color = a_color;\n      vec4 pos = vec4(a_position, 1);\n      pos = cc_matViewProj * pos;\n      gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nuniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_nativeSize;\n  highp   mat4 cc_matView;\n  mediump mat4 cc_matViewInv;\n  mediump mat4 cc_matProj;\n  mediump mat4 cc_matProjInv;\n  mediump mat4 cc_matViewProj;\n  mediump mat4 cc_matViewProjInv;\n  mediump vec4 cc_cameraPos;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec4 v_color;\nin vec2 v_uv0;\nuniform sampler2D texture;\nuniform sampler2D noiseTexture;\nuniform CUSTOM {\n    vec4 outlineColor;\n    vec2 textureSize;\n    float outlineWidth;\n};\nvec4 kernel() {\n      float offset = 2. / 445.;\n      vec4 color = texture(texture,vec2(v_uv0.x - offset,v_uv0.y - offset)) * 0.0947416;\n      color += texture(texture,vec2(v_uv0.x, v_uv0.y - offset)) * 0.118318;\n      color += texture(texture,vec2(v_uv0.x + offset, v_uv0.y + offset)) * 0.0947416;\n      color += texture(texture,vec2(v_uv0.x - offset, v_uv0.y)) * 0.118318;\n      color += texture(texture,vec2(v_uv0.x, v_uv0.y)) * 0.147761;\n      color += texture(texture,vec2(v_uv0.x + offset, v_uv0.y)) * 0.118318;\n      color += texture(texture,vec2(v_uv0.x - offset, v_uv0.y + offset)) * 0.0947416;\n      color += texture(texture,vec2(v_uv0.x, v_uv0.y + offset)) * 0.118318;\n      color += texture(texture,vec2(v_uv0.x + offset, v_uv0.y - offset)) * 0.0947416;\n      return color;\n  }\nvoid main () {\n      vec4 o = kernel();\n      gl_FragColor = o;\n}"
      }
    }
  ],
  "subMetas": {}
}