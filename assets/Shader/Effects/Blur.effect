// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        alphaThreshold: { value: 0.5 }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  in vec2 a_uv0;
  out vec2 v_uv0;

  void main () {
        v_uv0 = a_uv0;
        v_color = a_color;
      
        vec4 pos = vec4(a_position, 1);
        pos = cc_matViewProj * pos;
        
        gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>
  #include <cc-global>
  #include <cc-local>

  in vec4 v_color;
  in vec2 v_uv0;
  uniform sampler2D texture;
  
  vec4 kernel() {
        float offset = 2. / 445.;
        
        // 左上
        vec4 color = texture(texture,vec2(v_uv0.x - offset,v_uv0.y - offset)) * 0.0947416;
        // 上
        color += texture(texture,vec2(v_uv0.x, v_uv0.y - offset)) * 0.118318;
        // 右上
        color += texture(texture,vec2(v_uv0.x + offset, v_uv0.y + offset)) * 0.0947416;
        // 左
        color += texture(texture,vec2(v_uv0.x - offset, v_uv0.y)) * 0.118318;
        // 中
        color += texture(texture,vec2(v_uv0.x, v_uv0.y)) * 0.147761;
        // 右
        color += texture(texture,vec2(v_uv0.x + offset, v_uv0.y)) * 0.118318;
        // 左下
        color += texture(texture,vec2(v_uv0.x - offset, v_uv0.y + offset)) * 0.0947416;
        // 下
        color += texture(texture,vec2(v_uv0.x, v_uv0.y + offset)) * 0.118318;
        // 右下
        color += texture(texture,vec2(v_uv0.x + offset, v_uv0.y - offset)) * 0.0947416;
        
        return color;
    }

  void main () {
        vec4 o = kernel();

        gl_FragColor = o;
  }
}%
